#include <bits/stdc++.h>
using namespace std;

#define get_ch getchar_unlocked
#define test int t;cin>>t;while(t--)
#define fo(i, n) for(int i=0; i<n; i++)
#define Fo(i, k, n) for(int i=k; i<n; i++)
#define ll long long
#define ld long double
#define all(x) x.begin(), x.end()
#define deb(x) cout << #x << " " << x <<'\n'
#define is_sorted(v) std::is_sorted(v.begin(), v.end())
#define pb push_back
#define sz(x) (int)((x).size())

typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<pii> vpii;
typedef set<int> Si;
typedef set<ll> Sll;
typedef set<pii> Spii;
typedef set<pll> Spll;
typedef map<int, int> Mii;
typedef map<ll, ll> Mll;
typedef vector<vi> vvi;
typedef vector<vll> vvll;
const int mod = 1000000007;
const int pi = 3.1415926535897932384626;
const int e = 2.71828182845904523536;

bool visited[100001];
vi adj[100001];
int distance[100001];
queue<int> q;

void dfs(int s){
    if (visited[s]){
        return;
    }
    visited[s]=true;
    for(auto x:adj[s]){
        dfs(x);
    }
}

void bfs(int s){
    visited[s] = true;
    distance[s] = 0;
    q.push(s);
    while (!q.empty()) {
        int s = q.front(); q.pop();

        for (auto u : adj[s]) {
            if (visited[u]){
                continue;
            }
            visited[u] = true;
            distance[u] = distance[s]+1;
            q.push(u);
        }
    }
}

void solve(){
    
}


int main(){
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    
    test{
        solve();
    }
    return 0;
}
